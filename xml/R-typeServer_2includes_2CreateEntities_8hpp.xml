<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="R-typeServer_2includes_2CreateEntities_8hpp" kind="file" language="C++">
    <compoundname>CreateEntities.hpp</compoundname>
    <includes refid="Registry_8hpp" local="yes">../../ecs_architecture/includes/Registry.hpp</includes>
    <includes refid="Zipper_8hpp" local="yes">../../ecs_architecture/includes/Zipper.hpp</includes>
    <includes refid="IndexedZipper_8hpp" local="yes">../../ecs_architecture/includes/IndexedZipper.hpp</includes>
    <includes refid="INetworker_8hpp" local="yes">../../server_lib_encapsulation/INetworker.hpp</includes>
    <includes refid="R-typeServer_2includes_2Component_8hpp" local="yes">Component.hpp</includes>
    <includedby refid="R-typeServer_2includes_2Component_8hpp" local="yes">/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/Component.hpp</includedby>
    <includedby refid="R-typeServer_2includes_2Systems_8hpp" local="yes">/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/Systems.hpp</includedby>
    <incdepgraph>
      <node id="31">
        <label>Component.hpp</label>
        <link refid="R-typeServer_2includes_2Component_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp</label>
        <link refid="R-typeServer_2includes_2CreateEntities_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Entity.hpp</label>
        <link refid="Entity_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../../ecs_architecture/includes/IndexedZipper.hpp</label>
        <link refid="IndexedZipper_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../../ecs_architecture/includes/Registry.hpp</label>
        <link refid="Registry_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SparseArray.hpp</label>
        <link refid="SparseArray_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../../ecs_architecture/includes/Zipper.hpp</label>
        <link refid="Zipper_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../../general/ClockTime.hpp</label>
        <link refid="ClockTime_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../../general/Error.hpp</label>
        <link refid="Error_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>../general/default_libs.hpp</label>
        <link refid="default__libs_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>../../server_lib_encapsulation/INetworker.hpp</label>
        <link refid="INetworker_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>any</label>
      </node>
      <node id="23">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="24">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="33">
        <label>chrono</label>
      </node>
      <node id="34">
        <label>deque</label>
      </node>
      <node id="29">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="28">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="22">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="27">
        <label>thread</label>
      </node>
      <node id="17">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>typeindex</label>
      </node>
      <node id="12">
        <label>unordered_map</label>
      </node>
      <node id="18">
        <label>utility</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/Component.hpp</label>
        <link refid="R-typeServer_2includes_2Component_8hpp_source"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp</label>
        <link refid="R-typeServer_2includes_2CreateEntities_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/ServerCore.hpp</label>
        <link refid="ServerCore_8hpp_source"/>
      </node>
      <node id="3">
        <label>/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/Systems.hpp</label>
        <link refid="R-typeServer_2includes_2Systems_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a5b2df025a07dbd91b8d69b65901f6db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_player</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, std::size_t)</argsstring>
        <name>create_player</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="16" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a0e4a8bedd6ed5b7b62b14e7d84de2667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_missile</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;)</argsstring>
        <name>create_missile</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="18" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a15abf1f915d2ea6769c8d37c6ef95d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_enemy</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, std::size_t, int, float, float)</argsstring>
        <name>create_enemy</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="20" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a9e789424a3e690db2e0ef29415c7ba53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void move_player</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, float, float)</argsstring>
        <name>move_player</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="22" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1ae3b88c17f0f1425832fb7b261ca3b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kill_player</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, std::size_t)</argsstring>
        <name>kill_player</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="24" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a18575160cfc65edd5886b437eb5c469e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kill_entity</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, std::size_t)</argsstring>
        <name>kill_entity</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="26" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a48c7d0dd0615aaaddd8d49adcf5146a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void close_player_room</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt; &amp;, std::size_t)</argsstring>
        <name>close_player_room</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="28" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a993b71f3417ddeadb56d57b8c280c876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void alert_clients</definition>
        <argsstring>(registry &amp;, std::shared_ptr&lt; network::INetworker &gt;, std::size_t, std::vector&lt; std::size_t &gt;, Types &amp;&amp;...)</argsstring>
        <name>alert_clients</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt;</type>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt;</type>
        </param>
        <param>
          <type>Types &amp;&amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="31" column="6" declfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R-typeServer_2includes_2CreateEntities_8hpp_1a1d7c7f240e01b53edba6808c5f4ee0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void alert_clients</definition>
        <argsstring>(registry &amp;reg, std::shared_ptr&lt; network::INetworker &gt; _net, std::size_t room_id, std::vector&lt; std::size_t &gt; excepts, Types &amp;&amp;...va)</argsstring>
        <name>alert_clients</name>
        <param>
          <type><ref refid="classregistry" kindref="compound">registry</ref> &amp;</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classnetwork_1_1INetworker" kindref="compound">network::INetworker</ref> &gt;</type>
          <declname>_net</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>room_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt;</type>
          <declname>excepts</declname>
        </param>
        <param>
          <type>Types &amp;&amp;...</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>Alert all clients excepts those inside except. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Types</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type for value that can be transfered </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>registry to find clients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_net</parametername>
</parameternamelist>
<parameterdescription>
<para>networker to send informations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excepts</parametername>
</parameternamelist>
<parameterdescription>
<para>clients to ignore during transmission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>Pack of values to transmit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" line="49" column="6" bodyfile="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp" bodystart="49" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2022</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>CreateEntities</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CREATEENTITIES_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CREATEENTITIES_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../ecs_architecture/includes/Registry.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../ecs_architecture/includes/Zipper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../ecs_architecture/includes/IndexedZipper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../server_lib_encapsulation/INetworker.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_player(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/>std::size_t);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_missile(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_enemy(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/>std::size_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>move_player(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kill_player(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/>std::size_t);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kill_entity(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/>std::size_t);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_player_room(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,<sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>&amp;,<sp/>std::size_t);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Types&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alert_clients(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;network::INetworker&gt;,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::size_t&gt;,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Types<sp/>&amp;&amp;...);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Component.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Types&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alert_clients(<ref refid="classregistry" kindref="compound">registry</ref><sp/>&amp;reg,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;network::INetworker&gt;<sp/>_net,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>room_id,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::size_t&gt;<sp/>excepts,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Types<sp/>&amp;&amp;...va)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnetwork_1_1datatrans" kindref="compound">network::datatrans</ref><sp/>data(va...);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;room_info<sp/>=<sp/>reg.get_components&lt;<ref refid="structcomponent_1_1room__info" kindref="compound">component::room_info</ref>&gt;()[room_id].value();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;obj<sp/>:<sp/>room_info.clients)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;net_id<sp/>=<sp/>reg.get_components&lt;<ref refid="structcomponent_1_1network__id" kindref="compound">component::network_id</ref>&gt;()[obj].value().id;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignored<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>excepts)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>net_id)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ignored)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_net-&gt;set_peer_id(net_id);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_net<sp/>&lt;&lt;<sp/>data;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!CREATEENTITIES_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/KiNGnL/3ème année/B-CPP-500-COT-5-1-rtype-segnon.gnonlonfoun/R-typeServer/includes/CreateEntities.hpp"/>
  </compounddef>
</doxygen>
